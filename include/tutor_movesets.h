#ifndef POKEPLATINUM_TUTOR_MOVESETS_H
#define POKEPLATINUM_TUTOR_MOVESETS_H

typedef struct {
    u16 moveID;
    u8 unk_02;
    u8 unk_03;
    u8 unk_04;
    u8 unk_05;
    u32 shardColor; // the type of underground shard you use to trade to the move tutors
} TeachableMove;

static const TeachableMove sTeachableMoves[] = {
    { MOVE_DIVE,          0x2, 0x4, 0x2, 0x0, 0x0 },
    { MOVE_MUD_SLAP,      0x4, 0x4, 0x0, 0x0, 0x1 },
    { MOVE_FURY_CUTTER,   0x0, 0x8, 0x0, 0x0, 0x0 },
    { MOVE_ICY_WIND,      0x0, 0x6, 0x0, 0x2, 0x0 },
    { MOVE_ROLLOUT,       0x4, 0x2, 0x0, 0x2, 0x1 },
    { MOVE_THUNDER_PUNCH, 0x2, 0x6, 0x0, 0x0, 0x0 },
    { MOVE_FIRE_PUNCH,    0x2, 0x6, 0x0, 0x0, 0x0 },
    { MOVE_SUPERPOWER,    0x8, 0x0, 0x0, 0x0, 0x1 },
    { MOVE_ICE_PUNCH,     0x2, 0x6, 0x0, 0x0, 0x0 },
    { MOVE_IRON_HEAD,     0x6, 0x0, 0x2, 0x0, 0x1 },
    { MOVE_AQUA_TAIL,     0x6, 0x0, 0x0, 0x2, 0x1 },
    { MOVE_OMINOUS_WIND,  0x0, 0x6, 0x0, 0x2, 0x0 },
    { MOVE_GASTRO_ACID,   0x4, 0x0, 0x2, 0x2, 0x1 },
    { MOVE_SNORE,         0x2, 0x0, 0x4, 0x2, 0x2 },
    { MOVE_SPITE,         0x0, 0x0, 0x8, 0x0, 0x2 },
    { MOVE_AIR_CUTTER,    0x2, 0x4, 0x0, 0x2, 0x0 },
    { MOVE_HELPING_HAND,  0x2, 0x0, 0x4, 0x2, 0x2 },
    { MOVE_ENDEAVOR,      0x4, 0x0, 0x4, 0x0, 0x1 },
    { MOVE_OUTRAGE,       0x6, 0x0, 0x2, 0x0, 0x1 },
    { MOVE_ANCIENT_POWER, 0x6, 0x0, 0x0, 0x2, 0x1 },
    { MOVE_SYNTHESIS,     0x0, 0x0, 0x2, 0x6, 0x2 },
    { MOVE_SIGNAL_BEAM,   0x2, 0x2, 0x2, 0x2, 0x1 },
    { MOVE_ZEN_HEADBUTT,  0x0, 0x4, 0x4, 0x0, 0x0 },
    { MOVE_VACUUM_WAVE,   0x2, 0x4, 0x0, 0x2, 0x0 },
    { MOVE_EARTH_POWER,   0x6, 0x0, 0x0, 0x2, 0x1 },
    { MOVE_GUNK_SHOT,     0x4, 0x2, 0x0, 0x2, 0x1 },
    { MOVE_TWISTER,       0x6, 0x0, 0x0, 0x2, 0x1 },
    { MOVE_SEED_BOMB,     0x4, 0x0, 0x0, 0x4, 0x1 },
    { MOVE_IRON_DEFENSE,  0x4, 0x2, 0x2, 0x0, 0x1 },
    { MOVE_MAGNET_RISE,   0x0, 0x2, 0x4, 0x2, 0x2 },
    { MOVE_LAST_RESORT,   0x0, 0x0, 0x0, 0x8, 0x2 },
    { MOVE_BOUNCE,        0x4, 0x0, 0x2, 0x2, 0x1 },
    { MOVE_TRICK,         0x0, 0x4, 0x4, 0x0, 0x0 },
    { MOVE_HEAT_WAVE,     0x4, 0x2, 0x0, 0x2, 0x1 },
    { MOVE_KNOCK_OFF,     0x4, 0x4, 0x0, 0x0, 0x0 },
    { MOVE_SUCKER_PUNCH,  0x0, 0x6, 0x2, 0x0, 0x0 },
    { MOVE_SWIFT,         0x0, 0x2, 0x2, 0x4, 0x2 },
    { MOVE_UPROAR,        0x0, 0x0, 0x6, 0x2, 0x2 }
};

#define MOVESET_MASK_SIZE (s32)((NELEMS(sTeachableMoves) + 7) / 8)

// Each of the bits in this array correspond to a move in sTeachableMoves
// Therefore the size is dependent on how many teachable moves exist

typedef struct {
    u8 maskData[MOVESET_MASK_SIZE];
} MovesetMask;

#endif // POKEPLATINUM_TUTOR_MOVESETS_H